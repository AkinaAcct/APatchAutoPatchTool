#!/bin/env bash
#by nya
#2024-02-04

get_device_boot() { # 未指定boot路径时从设备boot分区获取boot镜像
	echo "${BLUE}I: Getting boot image...${RESET}"
	if [[ -z "${BOOTPATH}" ]]; then
		echo "${BLUE}I: Current boot: ${BOOTSUFFIX}(If empty: A-Only devices)${RESET}"
		dd if=${BYNAMEPATH}/boot${BOOTSUFFIX} of=${WORKDIR}/boot${BOOTSUFFIX}.img
		EXITSTATUS=$?
		if [[ $EXITSTATUS != 0 ]]; then
			echo "${RED}E: GET BOOT IMAGE FAILED${RESET}"
			exit 1
		fi
	else
		cp ${BOOTPATH} ${WORKDIR}/boot${BOOTSUFFIX}.img
	fi
	echo "${GREEN}I: Done.${RESET}"
}

get_tools() { # 从GitHub下载工具
	cd ${WORKDIR} || exit 1
	echo "${BLUE}I: Downloading kptools-${OS}...${RESET}"
	if [[ -n "${KPTOOLVER}" ]]; then
		echo "${BLUE}I: Use the specified version: ${KPTOOLVER}${RESET}"
	else
		echo "${BLUE}I: Use the latest kptools.${RESET}"
	fi
	if [[ -n "${KPTOOLVER}" ]]; then
		curl -LO --progress-bar "https://github.com/bmax121/KernelPatch/releases/download/${KPTOOLVER}/kptools-${OS}"
		EXITSTATUS=$?
	else
		curl -LO --progress-bar "https://github.com/bmax121/KernelPatch/releases/latest/download/kptools-${OS}"
		EXITSTATUS=$?
	fi
	if [[ $EXITSTATUS != 0 ]]; then
		echo "${RED}E: DOWNLOAD FAILED${RESET}"
		echo "Please check your internet connection."
		exit 1
	fi
	chmod +x kptools-${OS}
	echo "${GREEN}I: Done.${RESET}"
	echo "${BLUE}I: Downloading kpimg-android...${RESET}"
	if [[ -n "${KPTOOLVER}" ]]; then
		curl -LO --progress-bar "https://github.com/bmax121/KernelPatch/releases/download/${KPTOOLVER}/kpimg-android"
		EXITSTATUS=$?
	else
		curl -LO --progress-bar "https://github.com/bmax121/KernelPatch/releases/latest/download/kpimg-android"
		EXITSTATUS=$?
	fi
	if [[ $EXITSTATUS != 0 ]]; then
		echo "${RED}E: DOWNLOAD FAILED${RESET}"
		echo "Please check your internet connection."
		exit 1
	fi
	echo "${GREEN}I: Done.${RESET}"
	echo "${BLUE}I: Downloading magiskboot...${RESET}"
	curl -LO --progress-bar "https://raw.githubusercontent.com/nya-main/APatchAutoPatchTool/main/bin/magiskboot"
	EXITSTATUS=$?
	if [[ $EXITSTATUS != 0 ]]; then
		echo "${RED}E: DOWNLOAD FAILED${RESET}"
		echo "Please check your internet connection."
		exit 1
	fi
	chmod +x magiskboot
	echo "${GREEN}I: Done.${RESET}"
}

patch_boot() { # 修补boot镜像
	echo "${BLUE}I: Unpacking image...${RESET}"
	./magiskboot unpack boot${BOOTSUFFIX}.img
	EXITSTATUS=$?
	if [[ $EXITSTATUS != 0 ]]; then
		echo "${RED}E: UNPACK BOOT IMAGE FAILED!${RESET}"
		exit 1
	fi
	echo "${GREEN}I: Done.${RESET}"
	echo "${BLUE}I: Unpatching current image...${RESET}"
	./kptools-${OS} --unpatch --image kernel --out kernel ${EXTRAARGS} || EXITSTATUS=$? 
	if [[ ${EXITSTATUS} != 0 ]]; then
		echo "${YELLOW}I: Maybe you are using stock boot image?${RESET}"
		echo "${YELLOW}W: Now skipping unpatching...${RESET}"
	else
		echo "${GREEN}I: Done.${RESET}"
	fi
	echo "${BLUE}I: Patching image...Current Superkey: ${SUPERKEY}${RESET}"
	./kptools-${OS} --patch --kpimg kpimg-android --skey "${SUPERKEY}" --image kernel --out kernel
	EXITSTATUS=$?
	if [[ ${EXITSTATUS} != 0 ]]; then
		echo "${RED}E: PATCH FAILED!${RESET}"
		exit 1
	fi
	echo "${GREEN}I: Done${RESET}"
	echo "${BLUE}I: Repacking...${RESET}"
	./magiskboot repack boot${BOOTSUFFIX}.img
	EXITSTATUS=$?
	if [[ $EXITSTATUS != 0 ]]; then
		echo "${RED}E: REPACK FAILED!${RESET}"
		exit 1
	fi
	echo "${GREEN}I: Done.${RESET}"
}

flash_boot() { # 刷入boot镜像
	if [[ "${OS}" != "linux" ]]; then
		echo "${BLUE}I: Flashing boot image...${RESET}"
		if [[ -n "${TBOOTSUFFIX}" ]]; then
			echo "${BLUE}I: You previously specified that you want to install to another slot. Target slot:${TBOOTSUFFIX}."
			BOOTSUFFIX=${TBOOTSUFFIX}
		fi
		dd if=${WORKDIR}/new-boot.img of=${BYNAMEPATH}/boot${BOOTSUFFIX}
		EXITSTATUS=$?
		if [[ ${EXITSTATUS} != 0 ]]; then
			echo "${RED}E: WARNING!!! IMAGE FLASH FAILED${RESET}"
			echo "${YELLOW}I: Now trying to restore...${RESET}"
			dd if=${WORKDIR}/boot${BOOTSUFFIX}.img of=${BYNAMEPATH}/boot${BOOTSUFFIX}
			EXITSTATUS=$?
			if [[ ${EXITSTATUS} != 0 ]]; then
				echo "${RED}E: WARNING!!! RESTORE FAILED!!!"
				echo "Even I can't help you now. You can try to restore boot manually.${RESET}"
				exit 1
			fi
			echo "${YELLOW}I: Restore Sucessfully.${RESET}"
		fi
		echo "${GREEN}I: Flash done.${RESET}"
		echo "${BLUE}I: Cleaning temporary files...${RESET}"
		rm -rf ${WORKDIR}
		echo "${GREEN}I: Done.${RESET}"
	else
		echo "${RED}E: You are trying to change this script. Linux does not require a flashing step. This is the second level of warning.${RESET}"
	fi
}

print_superkey() { # 打印 SUPERKEY
	cat <<EOF
####################################


    YOUR SUPERKEY IS "$(echo "${BLUE}${SUPERKEY}${RESET}")"

    DON'T FORGET IT!!


####################################
EOF
	exit 0
}
